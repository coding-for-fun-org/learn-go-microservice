volumes:
  postgres-data:
  mongo-data:

services:
  frontend:
    build:
      context: ./frontend
    restart: always
    ports:
      - "80:80"
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    build:
      context: ./broker-service
    restart: always
    ports:
      - "8000:80"
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    build:
      context: ./auth-service
    restart: always
    ports:
      - "8001:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=mydb sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    build:
      context: ./logger-service
    restart: always
    ports:
      - "8002:80"
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: "postgres:14.2"
    restart: always
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongo:
    image: "mongo:5.0.3"
    restart: always
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: mydb
    volumes:
      - mongo-data:/data/db

  mailhog:
    image: "mailhog/mailhog"
    restart: always
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: replicated
      replicas: 1
